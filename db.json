{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/flex-block/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/flex-block/source/icons-192.png","path":"icons-192.png","modified":0,"renderable":1},{"_id":"themes/flex-block/source/icons-512.png","path":"icons-512.png","modified":0,"renderable":1},{"_id":"themes/flex-block/source/manifest.json","path":"manifest.json","modified":0,"renderable":1},{"_id":"themes/flex-block/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/flex-block/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"source/images/console/7d9a0b3a233368afc38ae348851a6ba6.jpg","path":"images/console/7d9a0b3a233368afc38ae348851a6ba6.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/console.md","hash":"39f2d33dd8453f2c17f4f189679ad87bca3fb70b","modified":1650292781966},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1646236346210},{"_id":"source/_posts/react.md","hash":"606df2222e24e4bc3b1ee2256295387a5fdbf167","modified":1650291165424},{"_id":"source/_posts/发布流程.md","hash":"0c069b2cf7215def37436174bb1e64591bd85c7d","modified":1648456751562},{"_id":"source/images/ad57f756ce6fc7b14.jpeg","hash":"32304f8e7f125441f051dd1705b69fe02f2dcb2d","modified":1648456751577},{"_id":"source/_posts/随笔.md","hash":"7244cf0d4dbca341c448adc9fa45f5f0d0998e2e","modified":1650290596188},{"_id":"source/_posts/计算机网络.md","hash":"1c4b81e7c8984c0abf502323de2e399b912b35b6","modified":1650290928643},{"_id":"source/积分抽奖.md","hash":"68d600829a1dc34228afcc2a29da62ca92ca966a","modified":1650273772181},{"_id":"themes/flex-block/.gitignore","hash":"a010af107642d751bda979583183f366cf05fd7f","modified":1646271382257},{"_id":"themes/flex-block/README.md","hash":"c6966f81a372f3bb40226ca79571fbe11b2dc8a0","modified":1646271382258},{"_id":"themes/flex-block/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1646271382259},{"_id":"themes/flex-block/LICENSE","hash":"da85e2f093615e3c008f60a94f85bf3d45106c95","modified":1646271382258},{"_id":"themes/flex-block/_config.yml","hash":"f3c838a0fd09b9ae02428bf10790503e529a094c","modified":1646617457856},{"_id":"themes/flex-block/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1646271382260},{"_id":"themes/flex-block/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1646271382260},{"_id":"themes/flex-block/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1646271382260},{"_id":"themes/flex-block/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1646271382259},{"_id":"themes/flex-block/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1646271382260},{"_id":"themes/flex-block/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1646271382261},{"_id":"themes/flex-block/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1646271382261},{"_id":"themes/flex-block/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1646271382260},{"_id":"themes/flex-block/languages/zh-CN.yml","hash":"eb0ef000853ecc6d5db678dd5b71caf53e809d02","modified":1646271382261},{"_id":"themes/flex-block/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1646271382261},{"_id":"themes/flex-block/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1646271382261},{"_id":"themes/flex-block/layout/archive.ejs","hash":"691837b349f9c4c11651d3a45776130cbde3587e","modified":1646271382271},{"_id":"themes/flex-block/layout/category.ejs","hash":"c631331af04cbfb8eb4567262a369be74fdf4acb","modified":1646271382271},{"_id":"themes/flex-block/layout/page.ejs","hash":"1efd4bc229345efff68aa47ec4bf9a774ebee874","modified":1646271382272},{"_id":"themes/flex-block/layout/post.ejs","hash":"e7afe45b5c524dcd7fc6115936dc4de8f6deaedc","modified":1646271382273},{"_id":"themes/flex-block/layout/index.ejs","hash":"1170f7c070d40374753ac343783b9795349f6ec9","modified":1646271382271},{"_id":"themes/flex-block/layout/layout.ejs","hash":"97858f04a1869f915888a9391995fd77e93d11b3","modified":1646271382272},{"_id":"themes/flex-block/scripts/index.js","hash":"7d85c41eb5ebddc4c79213c39e4cee83c719ec34","modified":1646271382279},{"_id":"themes/flex-block/source/icons-192.png","hash":"8cd106d9039f1d5aa8163ecd4a5e352058a0f6cf","modified":1646271382284},{"_id":"themes/flex-block/source/favicon.ico","hash":"cd1b610096d9c5c780fd2a7e24baaa78dada3163","modified":1646271382284},{"_id":"themes/flex-block/layout/tag.ejs","hash":"5d7eaf2d7cee35d6ec957db5edbf81f38b450ed7","modified":1646271382273},{"_id":"themes/flex-block/source/manifest.json","hash":"2088b35862949ca226a2b7b3d06d50c25ef721a0","modified":1646271382285},{"_id":"themes/flex-block/layout/_partial/content.ejs","hash":"abac1b4977a15d63535aad7e4566e998baafac37","modified":1646271382262},{"_id":"themes/flex-block/layout/_partial/footer-other.ejs","hash":"9e93e20f3e3ded687abe00a6478e3c4dbfff479e","modified":1646271382262},{"_id":"themes/flex-block/layout/_partial/article-list.ejs","hash":"9b48c0bb461cd82c5caec191c6dae5e3ad716cd3","modified":1646271382262},{"_id":"themes/flex-block/layout/_partial/footer-script.ejs","hash":"8a5834bbff942b96960ae7f40f13ce4869cfa3b2","modified":1646271382263},{"_id":"themes/flex-block/layout/_partial/footer.ejs","hash":"ec1b0fc3c90b768a9e5a7e17d12865661f6a6976","modified":1646271382263},{"_id":"themes/flex-block/layout/_partial/pagination.ejs","hash":"51a0986190719eea34e8624c87b346b4a199e49c","modified":1646271382264},{"_id":"themes/flex-block/layout/_svg/icon-article.svg","hash":"f89ab250586cf0bd8108b77e48a5288f1d0dd512","modified":1646271382265},{"_id":"themes/flex-block/layout/_partial/nav.ejs","hash":"7da8b959230e2c3b1f20413263c578ad46a6b1a5","modified":1646271382264},{"_id":"themes/flex-block/layout/_svg/icon-categories.svg","hash":"cfe4012051132281255e211c28971e05726cdc43","modified":1646271382265},{"_id":"themes/flex-block/layout/_svg/icon-notice.svg","hash":"0d2f705ca65673eda3d38420aa512d83fcbc1e72","modified":1646271382265},{"_id":"themes/flex-block/layout/_svg/icon-tags.svg","hash":"0d974ce6d089d08ef009ad56d1b5d66bf9c2c1e6","modified":1646271382266},{"_id":"themes/flex-block/layout/_svg/icon-toc.svg","hash":"05d2eecfb27deade461f25b2a396c230e18cd6b4","modified":1646271382266},{"_id":"themes/flex-block/layout/_partial/header.ejs","hash":"94c7ccf8a810d137b44cdc31fc9a8a67ca229340","modified":1646271382263},{"_id":"themes/flex-block/layout/_svg/social-ins.svg","hash":"fdcaac4ecfa35a05765a9aead8ed52c46634f4ed","modified":1646271382267},{"_id":"themes/flex-block/layout/_partial/page.ejs","hash":"2a7b3a2c9438fd00f4a3b7258b83f79c09f8395b","modified":1646271382264},{"_id":"themes/flex-block/layout/_widget/article-nav.ejs","hash":"8df3b527e6153323c8ded33768bd5e5267dfa422","modified":1646271382268},{"_id":"themes/flex-block/layout/_svg/social-github.svg","hash":"20c1b5fd5e06d10fb1e2cd83da0a18629dbe9c9d","modified":1646271382266},{"_id":"themes/flex-block/layout/_widget/category.ejs","hash":"488d6e93a6240d00d0c60c9f104f4304400415ba","modified":1646271382269},{"_id":"themes/flex-block/layout/_widget/comment.ejs","hash":"5fa37e58464f1106678d6bbf9f8f256fde573d01","modified":1646271382269},{"_id":"themes/flex-block/layout/_svg/social-weibo.svg","hash":"ec9dd4c6d4cd7e1c860054c84cef570c7bbd0f35","modified":1646271382267},{"_id":"themes/flex-block/layout/_widget/tag.ejs","hash":"2a1642735fe62363cee1eeeb09a3d36c2e8ac00e","modified":1646271382269},{"_id":"themes/flex-block/layout/_widget/widget-author.ejs","hash":"d3bb8143f405d39734b28216f31a5a7b26691bab","modified":1646271382269},{"_id":"themes/flex-block/layout/_svg/social-twitter.svg","hash":"b9bbd30600b9832ac7e37fc116d78b389c047e1a","modified":1646271382267},{"_id":"themes/flex-block/layout/_widget/widget-categorys.ejs","hash":"588237737f87a0ff69d00605c868c1297054d573","modified":1646271382270},{"_id":"themes/flex-block/layout/_widget/widget-notice.ejs","hash":"0a1ec45028b2abd123bb6a96017168fd55759971","modified":1646271382270},{"_id":"themes/flex-block/layout/_svg/social-zhihu.svg","hash":"c7dfaa6791aea630f418821890ae97ac4153ef50","modified":1646271382268},{"_id":"themes/flex-block/layout/plug-in/aplayer.ejs","hash":"081184379480e5e154a7d06e1e059a38e964f10c","modified":1646271382272},{"_id":"themes/flex-block/layout/_widget/date.ejs","hash":"5c275ec71f7ce628599683393ae71cf95196f71f","modified":1646271382269},{"_id":"themes/flex-block/layout/plug-in/dplayer.ejs","hash":"bea95d7c81c86ff88e5cc20f3a7a7afaf311a70e","modified":1646271382273},{"_id":"themes/flex-block/layout/_widget/widget-tags.ejs","hash":"8c360bf72e85a4cf48c6064b44a64828d059285a","modified":1646271382270},{"_id":"themes/flex-block/layout/_widget/widget-toc.ejs","hash":"0607e05641735d1fea7c74bc3c5b5f41f3bfb16f","modified":1646271382270},{"_id":"themes/flex-block/source/css/style.styl","hash":"f388a27e55579eb3ecd726c580c2253a48f68fc3","modified":1646271382283},{"_id":"themes/flex-block/source/css/_partial/card.styl","hash":"db154b877337176dc1428cb50fb9485d8ec89a86","modified":1646271382279},{"_id":"themes/flex-block/source/css/_partial/content.styl","hash":"e9bfcf6a7ce43256c3cb589df1c7472c40534da8","modified":1646271382280},{"_id":"themes/flex-block/source/js/script.js","hash":"8f0900b1b6bbd1fdc463fbc77f3deb5e598c9871","modified":1646271382285},{"_id":"themes/flex-block/source/css/_partial/footer.styl","hash":"00796f433ed85bd9186be3b2d16deb90b682d1d1","modified":1646271382280},{"_id":"themes/flex-block/source/css/_partial/pagination.styl","hash":"bdd9fede0c8f23af3e9b0cbc4f356e3148721416","modified":1646271382282},{"_id":"themes/flex-block/source/css/_partial/header.styl","hash":"fa79f285c25b206307efdcae91b8363efc920980","modified":1646271382281},{"_id":"themes/flex-block/source/css/_partial/nav.styl","hash":"8a90c260ee4ab99001fc414accd661e7fdb235d5","modified":1646271382282},{"_id":"themes/flex-block/source/css/_partial/page.styl","hash":"2d0fcee623a70283e53134fb2e16f2f7fa4d6d95","modified":1646271382282},{"_id":"themes/flex-block/source/css/_util/variables.styl","hash":"ccd0ee13e0a38bb41b3a5fff1c3b32eeb35beff7","modified":1646271382283},{"_id":"themes/flex-block/source/css/_util/mixins.styl","hash":"70cf83071cfa7823045ea6f355f47b0aa26d23f8","modified":1646271382282},{"_id":"themes/flex-block/source/css/_util/theme.styl","hash":"1d7c69498b68e85f2a048acfa6924df5070ddc48","modified":1646271382282},{"_id":"themes/flex-block/source/icons-512.png","hash":"c2cd59a7712738831ee0cca4338343d407777a4b","modified":1646271382285},{"_id":"themes/flex-block/screenshots/flex-block--post.jpeg","hash":"bc607db875e42fe2c82ed5130c07d67cca5adc41","modified":1646271382277},{"_id":"themes/flex-block/screenshots/flex-block--home.jpeg","hash":"7f6c738298108020ab2e4918592007a2d4bcb9d8","modified":1646271382275},{"_id":"themes/flex-block/screenshots/flex-block.png","hash":"93a5456d4f3a51f5e9fd4a957b85584273083fe6","modified":1646271382279},{"_id":"public/积分抽奖.html","hash":"6cd987c5dc5a94e69956f2e1b76d537b905065fa","modified":1650291757971},{"_id":"public/2022/04/01/react/index.html","hash":"85f53866942b595bcbc8b9ed55dff4e041e8163a","modified":1650291757971},{"_id":"public/archives/index.html","hash":"2b80c11f108c9e5de7bd8a65c33f40982ff168ce","modified":1650291757971},{"_id":"public/archives/2022/index.html","hash":"2b80c11f108c9e5de7bd8a65c33f40982ff168ce","modified":1650291757971},{"_id":"public/archives/2022/03/index.html","hash":"6ba2452a9e13f199f2cf307cdb52ab085fd0060b","modified":1650291757971},{"_id":"public/archives/2022/04/index.html","hash":"d0fb0dd64641b22b199d026acd4dbe53c6327038","modified":1650291757971},{"_id":"public/index.html","hash":"bdc350592eca11bae0c43606211d7f0c4c174fa1","modified":1650291757971},{"_id":"public/tags/react/index.html","hash":"127ea906798444051c557f3b84b70cdeace95c1c","modified":1650291757971},{"_id":"public/tags/对大学计算网络重新进行了学习，本文也相当于是笔记/index.html","hash":"657ded01aa817cf49e659a3d5660c17d56c6410f","modified":1650291757971},{"_id":"public/2022/04/01/随笔/index.html","hash":"578cceb88620229d3805e1cdc55d3f03bf0835a1","modified":1650291757971},{"_id":"public/2022/03/28/计算机网络/index.html","hash":"de1da77d01110db6df665ce871a88ea4cc8551f8","modified":1650291757971},{"_id":"public/2022/03/04/console/index.html","hash":"8cc79e5aa53e8e0788c5d1b94b8b3a81c12b9c02","modified":1650291757971},{"_id":"public/2022/03/03/发布流程/index.html","hash":"5a20b274b48908cff91b872c6ae303839201cc45","modified":1650291757971},{"_id":"public/2022/03/02/hello-world/index.html","hash":"ef9de3dc00c0a1cb5d4b9513281c6e6826e1fcb5","modified":1650291757971},{"_id":"public/images/ad57f756ce6fc7b14.jpeg","hash":"32304f8e7f125441f051dd1705b69fe02f2dcb2d","modified":1650291757971},{"_id":"public/favicon.ico","hash":"cd1b610096d9c5c780fd2a7e24baaa78dada3163","modified":1650291757971},{"_id":"public/icons-192.png","hash":"8cd106d9039f1d5aa8163ecd4a5e352058a0f6cf","modified":1650291757971},{"_id":"public/icons-512.png","hash":"c2cd59a7712738831ee0cca4338343d407777a4b","modified":1650291757971},{"_id":"public/manifest.json","hash":"70ae21c5c320fbc0df5922a4baf3fa73d5343959","modified":1650291757971},{"_id":"public/js/script.js","hash":"8f0900b1b6bbd1fdc463fbc77f3deb5e598c9871","modified":1650291757971},{"_id":"public/css/style.css","hash":"d144f2d72758599aef854441410f1dcf63bc6639","modified":1650291757971},{"_id":"source/images/console/7d9a0b3a233368afc38ae348851a6ba6.jpg","hash":"56fee6a2ff532fe54a29827b04e45cd28ea450ee","modified":1649599024666},{"_id":"source/_posts/ad57f756ce6fc7b14.jpeg","hash":"32304f8e7f125441f051dd1705b69fe02f2dcb2d","modified":1648456751577}],"Category":[],"Data":[],"Page":[{"_content":"#### 发起抽奖\n\n开奖时间、中奖名额、奖励\n\n#### 上一次的抽奖配置\n\n#### 抽奖详情\n\n开奖时间、红包奖励、参与人数\n\n#### 取消抽奖（有人参与就不能取消抽奖）\n\n#### 抽奖结果\n\n中奖人数、中奖人、中奖积分\n\n#### 积分\n\n积分余额、\n\n#### 积分明细\n\n时间、积分数、变更内容(奖励内容\\中奖名额)","source":"积分抽奖.md","raw":"#### 发起抽奖\n\n开奖时间、中奖名额、奖励\n\n#### 上一次的抽奖配置\n\n#### 抽奖详情\n\n开奖时间、红包奖励、参与人数\n\n#### 取消抽奖（有人参与就不能取消抽奖）\n\n#### 抽奖结果\n\n中奖人数、中奖人、中奖积分\n\n#### 积分\n\n积分余额、\n\n#### 积分明细\n\n时间、积分数、变更内容(奖励内容\\中奖名额)","date":"2022-04-18T09:22:52.191Z","updated":"2022-04-18T09:22:52.181Z","path":"积分抽奖.html","title":"","comments":1,"layout":"page","_id":"cl24t3qc80000wsnr9yhv21pl","content":"<h4 id=\"发起抽奖\"><a href=\"#发起抽奖\" class=\"headerlink\" title=\"发起抽奖\"></a>发起抽奖</h4><p>开奖时间、中奖名额、奖励</p>\n<h4 id=\"上一次的抽奖配置\"><a href=\"#上一次的抽奖配置\" class=\"headerlink\" title=\"上一次的抽奖配置\"></a>上一次的抽奖配置</h4><h4 id=\"抽奖详情\"><a href=\"#抽奖详情\" class=\"headerlink\" title=\"抽奖详情\"></a>抽奖详情</h4><p>开奖时间、红包奖励、参与人数</p>\n<h4 id=\"取消抽奖（有人参与就不能取消抽奖）\"><a href=\"#取消抽奖（有人参与就不能取消抽奖）\" class=\"headerlink\" title=\"取消抽奖（有人参与就不能取消抽奖）\"></a>取消抽奖（有人参与就不能取消抽奖）</h4><h4 id=\"抽奖结果\"><a href=\"#抽奖结果\" class=\"headerlink\" title=\"抽奖结果\"></a>抽奖结果</h4><p>中奖人数、中奖人、中奖积分</p>\n<h4 id=\"积分\"><a href=\"#积分\" class=\"headerlink\" title=\"积分\"></a>积分</h4><p>积分余额、</p>\n<h4 id=\"积分明细\"><a href=\"#积分明细\" class=\"headerlink\" title=\"积分明细\"></a>积分明细</h4><p>时间、积分数、变更内容(奖励内容\\中奖名额)</p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"发起抽奖\"><a href=\"#发起抽奖\" class=\"headerlink\" title=\"发起抽奖\"></a>发起抽奖</h4><p>开奖时间、中奖名额、奖励</p>\n<h4 id=\"上一次的抽奖配置\"><a href=\"#上一次的抽奖配置\" class=\"headerlink\" title=\"上一次的抽奖配置\"></a>上一次的抽奖配置</h4><h4 id=\"抽奖详情\"><a href=\"#抽奖详情\" class=\"headerlink\" title=\"抽奖详情\"></a>抽奖详情</h4><p>开奖时间、红包奖励、参与人数</p>\n<h4 id=\"取消抽奖（有人参与就不能取消抽奖）\"><a href=\"#取消抽奖（有人参与就不能取消抽奖）\" class=\"headerlink\" title=\"取消抽奖（有人参与就不能取消抽奖）\"></a>取消抽奖（有人参与就不能取消抽奖）</h4><h4 id=\"抽奖结果\"><a href=\"#抽奖结果\" class=\"headerlink\" title=\"抽奖结果\"></a>抽奖结果</h4><p>中奖人数、中奖人、中奖积分</p>\n<h4 id=\"积分\"><a href=\"#积分\" class=\"headerlink\" title=\"积分\"></a>积分</h4><p>积分余额、</p>\n<h4 id=\"积分明细\"><a href=\"#积分明细\" class=\"headerlink\" title=\"积分明细\"></a>积分明细</h4><p>时间、积分数、变更内容(奖励内容\\中奖名额)</p>\n"}],"Post":[{"title":"console","date":"2022-03-04T09:59:03.000Z","cover":"https://7465-test-9g28n0kc3da62e81-1305695530.tcb.qcloud.la/my-image.gif?sign=ddb62049ab829480c5984c278fef7f5e&t=1646389269","_content":"\n![]({% asset_img ad57f756ce6fc7b14.jpeg This is an example image %})\n\n<img src=\"../images/console/7d9a0b3a233368afc38ae348851a6ba6.jpg\" style=\"zoom:50%;\" />\n\n**`Console`** 对象提供了浏览器控制台调试的接口（如：Firefox 的 [Web Console](https://developer.mozilla.org/en-US/docs/Tools/Web_Console)）。在不同浏览器上它的工作方式可能不一样，但通常都会提供一套共性的功能。\n\n`Console` 对象可以从任何全局对象中访问到，如 浏览器作用域上的 [`Window`](https://developer.mozilla.org/zh-CN/docs/Web/API/Window)，以及通过属性控制台作为workers中的特定变体的 [`WorkerGlobalScope`](https://developer.mozilla.org/zh-CN/docs/Web/API/WorkerGlobalScope)。可以通过 [`Window.console`](https://developer.mozilla.org/zh-CN/docs/Web/API/Window/console) 引用，也可以简单的通过 `console` 引用。例：\n\n```\nconsole.log(\"Failed to open the specified link\")\n```\n\n### 方法\n\n- [`Console.assert()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/assert)\n\n  如果第一个参数为 `false` ，则将消息和堆栈跟踪记录到控制台。\n\n- [`Console.clear()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/clear)\n\n  清空控制台，并输出 `Console was cleared`。\n\n- [`Console.count()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/count)\n\n  以参数为标识记录调用的次数，调用时在控制台打印标识以及调用次数。\n\n- [`Console.countReset()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/countReset)\n\n  重置指定标签的计数器值。\n\n- [`Console.debug()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/debug)\n\n  在控制台打印一条 `\"debug\"` 级别的消息。\n\n- [`Console.dir()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/dir)\n\n  显示一个由特定的 Javascript 对象列表组成的可交互列表。这个列表可以使用三角形隐藏和显示来审查子对象的内容。.\n\n- [`Console.dirxml()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/dirxml)\n\n  打印 XML/HTML 元素表示的指定对象，否则显示 JavaScript 对象视图。\n\n- [`Console.error()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/error)\n\n  打印一条错误信息，使用方法可以参考 [string substitution](https://developer.mozilla.org/en-US/docs/Web/API/console#using_string_substitutions)。\n\n- `Console.exception()` Non-Standard Deprecated\n\n  `error()` 方法的别称。\n\n- [`Console.group()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/group)\n\n  创建一个新的内联 [group](https://developer.mozilla.org/en-US/docs/Web/API/console#using_groups_in_the_console), 后续所有打印内容将会以子层级的形式展示。调用 `groupEnd()`来闭合组。\n\n- [`Console.groupCollapsed()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/groupCollapsed)\n\n  创建一个新的内联 [group](https://developer.mozilla.org/en-US/docs/Web/API/console#using_groups_in_the_console)。使用方法和 `group()` 相同，不同的是，`groupCollapsed()` 方法打印出来的内容默认是折叠的。调用`groupEnd()`来闭合组。\n\n- [`Console.groupEnd()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/groupEnd)\n\n  闭合当前内联 [group](https://developer.mozilla.org/en-US/docs/Web/API/console#Using_groups_in_the_console)。\n\n- [`Console.info()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/info)\n\n  打印资讯类说明信息，使用方法可以参考 [string substitution](https://developer.mozilla.org/en-US/docs/Web/API/console#using_string_substitutions)。\n\n- [`Console.log()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/log)\n\n  打印内容的通用方法，使用方法可以参考 [string substitution](https://developer.mozilla.org/en-US/docs/Web/API/console#using_string_substitutions)。\n\n- [`Console.profile()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/profile) Non-Standard\n\n  Starts the browser's built-in profiler (for example, the [Firefox performance tool](https://firefox-source-docs.mozilla.org/devtools-user/performance/index.html)). You can specify an optional name for the profile.\n\n- [`Console.profileEnd()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/profileEnd) Non-Standard\n\n  Stops the profiler. You can see the resulting profile in the browser's performance tool (for example, the [Firefox performance tool](https://firefox-source-docs.mozilla.org/devtools-user/performance/index.html)).\n\n- [`Console.table()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/table)\n\n  将列表型的数据打印成表格。\n\n- [`Console.time()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/time)\n\n  启动一个以入参作为特定名称的[计时器](https://developer.mozilla.org/en-US/docs/Web/API/console#Timers)，在显示页面中可同时运行的计时器上限为10,000.\n\n- [`Console.timeEnd()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/timeEnd)\n\n  结束特定的 [计时器](https://developer.mozilla.org/en-US/docs/Web/API/console#Timers) 并以毫秒打印其从开始到结束所用的时间。\n\n- [`Console.timeLog()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/timeLog)\n\n  打印特定 [计时器](https://developer.mozilla.org/en-US/docs/Web/API/console#timers) 所运行的时间。\n\n- [`Console.timeStamp()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/timeStamp) Non-Standard\n\n  添加一个标记到浏览器的 [Timeline](https://developer.chrome.com/devtools/docs/timeline) 或 [Waterfall](https://developer.mozilla.org/en-US/docs/Tools/Performance/Waterfall) 工具。\n\n- [`Console.trace()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/trace)\n\n  输出一个 [stack trace](https://developer.mozilla.org/en-US/docs/Web/API/console#stack_traces)。\n\n- [`Console.warn()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/warn)\n\n  打印一个警告信息，可以使用 [string substitution](https://developer.mozilla.org/en-US/docs/Web/API/console#using_string_substitutions) 和额外的参数。\n","source":"_posts/console.md","raw":"---\ntitle: console\ndate: 2022-03-04 17:59:03\ntags:\ncover: https://7465-test-9g28n0kc3da62e81-1305695530.tcb.qcloud.la/my-image.gif?sign=ddb62049ab829480c5984c278fef7f5e&t=1646389269\n---\n\n![]({% asset_img ad57f756ce6fc7b14.jpeg This is an example image %})\n\n<img src=\"../images/console/7d9a0b3a233368afc38ae348851a6ba6.jpg\" style=\"zoom:50%;\" />\n\n**`Console`** 对象提供了浏览器控制台调试的接口（如：Firefox 的 [Web Console](https://developer.mozilla.org/en-US/docs/Tools/Web_Console)）。在不同浏览器上它的工作方式可能不一样，但通常都会提供一套共性的功能。\n\n`Console` 对象可以从任何全局对象中访问到，如 浏览器作用域上的 [`Window`](https://developer.mozilla.org/zh-CN/docs/Web/API/Window)，以及通过属性控制台作为workers中的特定变体的 [`WorkerGlobalScope`](https://developer.mozilla.org/zh-CN/docs/Web/API/WorkerGlobalScope)。可以通过 [`Window.console`](https://developer.mozilla.org/zh-CN/docs/Web/API/Window/console) 引用，也可以简单的通过 `console` 引用。例：\n\n```\nconsole.log(\"Failed to open the specified link\")\n```\n\n### 方法\n\n- [`Console.assert()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/assert)\n\n  如果第一个参数为 `false` ，则将消息和堆栈跟踪记录到控制台。\n\n- [`Console.clear()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/clear)\n\n  清空控制台，并输出 `Console was cleared`。\n\n- [`Console.count()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/count)\n\n  以参数为标识记录调用的次数，调用时在控制台打印标识以及调用次数。\n\n- [`Console.countReset()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/countReset)\n\n  重置指定标签的计数器值。\n\n- [`Console.debug()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/debug)\n\n  在控制台打印一条 `\"debug\"` 级别的消息。\n\n- [`Console.dir()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/dir)\n\n  显示一个由特定的 Javascript 对象列表组成的可交互列表。这个列表可以使用三角形隐藏和显示来审查子对象的内容。.\n\n- [`Console.dirxml()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/dirxml)\n\n  打印 XML/HTML 元素表示的指定对象，否则显示 JavaScript 对象视图。\n\n- [`Console.error()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/error)\n\n  打印一条错误信息，使用方法可以参考 [string substitution](https://developer.mozilla.org/en-US/docs/Web/API/console#using_string_substitutions)。\n\n- `Console.exception()` Non-Standard Deprecated\n\n  `error()` 方法的别称。\n\n- [`Console.group()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/group)\n\n  创建一个新的内联 [group](https://developer.mozilla.org/en-US/docs/Web/API/console#using_groups_in_the_console), 后续所有打印内容将会以子层级的形式展示。调用 `groupEnd()`来闭合组。\n\n- [`Console.groupCollapsed()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/groupCollapsed)\n\n  创建一个新的内联 [group](https://developer.mozilla.org/en-US/docs/Web/API/console#using_groups_in_the_console)。使用方法和 `group()` 相同，不同的是，`groupCollapsed()` 方法打印出来的内容默认是折叠的。调用`groupEnd()`来闭合组。\n\n- [`Console.groupEnd()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/groupEnd)\n\n  闭合当前内联 [group](https://developer.mozilla.org/en-US/docs/Web/API/console#Using_groups_in_the_console)。\n\n- [`Console.info()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/info)\n\n  打印资讯类说明信息，使用方法可以参考 [string substitution](https://developer.mozilla.org/en-US/docs/Web/API/console#using_string_substitutions)。\n\n- [`Console.log()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/log)\n\n  打印内容的通用方法，使用方法可以参考 [string substitution](https://developer.mozilla.org/en-US/docs/Web/API/console#using_string_substitutions)。\n\n- [`Console.profile()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/profile) Non-Standard\n\n  Starts the browser's built-in profiler (for example, the [Firefox performance tool](https://firefox-source-docs.mozilla.org/devtools-user/performance/index.html)). You can specify an optional name for the profile.\n\n- [`Console.profileEnd()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/profileEnd) Non-Standard\n\n  Stops the profiler. You can see the resulting profile in the browser's performance tool (for example, the [Firefox performance tool](https://firefox-source-docs.mozilla.org/devtools-user/performance/index.html)).\n\n- [`Console.table()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/table)\n\n  将列表型的数据打印成表格。\n\n- [`Console.time()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/time)\n\n  启动一个以入参作为特定名称的[计时器](https://developer.mozilla.org/en-US/docs/Web/API/console#Timers)，在显示页面中可同时运行的计时器上限为10,000.\n\n- [`Console.timeEnd()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/timeEnd)\n\n  结束特定的 [计时器](https://developer.mozilla.org/en-US/docs/Web/API/console#Timers) 并以毫秒打印其从开始到结束所用的时间。\n\n- [`Console.timeLog()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/timeLog)\n\n  打印特定 [计时器](https://developer.mozilla.org/en-US/docs/Web/API/console#timers) 所运行的时间。\n\n- [`Console.timeStamp()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/timeStamp) Non-Standard\n\n  添加一个标记到浏览器的 [Timeline](https://developer.chrome.com/devtools/docs/timeline) 或 [Waterfall](https://developer.mozilla.org/en-US/docs/Tools/Performance/Waterfall) 工具。\n\n- [`Console.trace()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/trace)\n\n  输出一个 [stack trace](https://developer.mozilla.org/en-US/docs/Web/API/console#stack_traces)。\n\n- [`Console.warn()`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/warn)\n\n  打印一个警告信息，可以使用 [string substitution](https://developer.mozilla.org/en-US/docs/Web/API/console#using_string_substitutions) 和额外的参数。\n","slug":"console","published":1,"updated":"2022-04-18T14:39:41.966Z","_id":"cl24t3qcb0001wsnr08psakdl","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/!--swig%EF%BF%BC1--\"></p>\n<img src=\"../images/console/7d9a0b3a233368afc38ae348851a6ba6.jpg\" style=\"zoom:50%;\" />\n\n<p><strong><code>Console</code></strong> 对象提供了浏览器控制台调试的接口（如：Firefox 的 <a href=\"https://developer.mozilla.org/en-US/docs/Tools/Web_Console\">Web Console</a>）。在不同浏览器上它的工作方式可能不一样，但通常都会提供一套共性的功能。</p>\n<p><code>Console</code> 对象可以从任何全局对象中访问到，如 浏览器作用域上的 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Window\"><code>Window</code></a>，以及通过属性控制台作为workers中的特定变体的 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a>。可以通过 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/console\"><code>Window.console</code></a> 引用，也可以简单的通过 <code>console</code> 引用。例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(&quot;Failed to open the specified link&quot;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h3><ul>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/assert\"><code>Console.assert()</code></a></p>\n<p>如果第一个参数为 <code>false</code> ，则将消息和堆栈跟踪记录到控制台。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/clear\"><code>Console.clear()</code></a></p>\n<p>清空控制台，并输出 <code>Console was cleared</code>。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/count\"><code>Console.count()</code></a></p>\n<p>以参数为标识记录调用的次数，调用时在控制台打印标识以及调用次数。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/countReset\"><code>Console.countReset()</code></a></p>\n<p>重置指定标签的计数器值。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/debug\"><code>Console.debug()</code></a></p>\n<p>在控制台打印一条 <code>&quot;debug&quot;</code> 级别的消息。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/dir\"><code>Console.dir()</code></a></p>\n<p>显示一个由特定的 Javascript 对象列表组成的可交互列表。这个列表可以使用三角形隐藏和显示来审查子对象的内容。.</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/dirxml\"><code>Console.dirxml()</code></a></p>\n<p>打印 XML/HTML 元素表示的指定对象，否则显示 JavaScript 对象视图。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/error\"><code>Console.error()</code></a></p>\n<p>打印一条错误信息，使用方法可以参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console#using_string_substitutions\">string substitution</a>。</p>\n</li>\n<li><p><code>Console.exception()</code> Non-Standard Deprecated</p>\n<p><code>error()</code> 方法的别称。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/group\"><code>Console.group()</code></a></p>\n<p>创建一个新的内联 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console#using_groups_in_the_console\">group</a>, 后续所有打印内容将会以子层级的形式展示。调用 <code>groupEnd()</code>来闭合组。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/groupCollapsed\"><code>Console.groupCollapsed()</code></a></p>\n<p>创建一个新的内联 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console#using_groups_in_the_console\">group</a>。使用方法和 <code>group()</code> 相同，不同的是，<code>groupCollapsed()</code> 方法打印出来的内容默认是折叠的。调用<code>groupEnd()</code>来闭合组。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/groupEnd\"><code>Console.groupEnd()</code></a></p>\n<p>闭合当前内联 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console#Using_groups_in_the_console\">group</a>。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/info\"><code>Console.info()</code></a></p>\n<p>打印资讯类说明信息，使用方法可以参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console#using_string_substitutions\">string substitution</a>。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/log\"><code>Console.log()</code></a></p>\n<p>打印内容的通用方法，使用方法可以参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console#using_string_substitutions\">string substitution</a>。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/profile\"><code>Console.profile()</code></a> Non-Standard</p>\n<p>Starts the browser’s built-in profiler (for example, the <a href=\"https://firefox-source-docs.mozilla.org/devtools-user/performance/index.html\">Firefox performance tool</a>). You can specify an optional name for the profile.</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/profileEnd\"><code>Console.profileEnd()</code></a> Non-Standard</p>\n<p>Stops the profiler. You can see the resulting profile in the browser’s performance tool (for example, the <a href=\"https://firefox-source-docs.mozilla.org/devtools-user/performance/index.html\">Firefox performance tool</a>).</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/table\"><code>Console.table()</code></a></p>\n<p>将列表型的数据打印成表格。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/time\"><code>Console.time()</code></a></p>\n<p>启动一个以入参作为特定名称的<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console#Timers\">计时器</a>，在显示页面中可同时运行的计时器上限为10,000.</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/timeEnd\"><code>Console.timeEnd()</code></a></p>\n<p>结束特定的 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console#Timers\">计时器</a> 并以毫秒打印其从开始到结束所用的时间。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/timeLog\"><code>Console.timeLog()</code></a></p>\n<p>打印特定 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console#timers\">计时器</a> 所运行的时间。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/timeStamp\"><code>Console.timeStamp()</code></a> Non-Standard</p>\n<p>添加一个标记到浏览器的 <a href=\"https://developer.chrome.com/devtools/docs/timeline\">Timeline</a> 或 <a href=\"https://developer.mozilla.org/en-US/docs/Tools/Performance/Waterfall\">Waterfall</a> 工具。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/trace\"><code>Console.trace()</code></a></p>\n<p>输出一个 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console#stack_traces\">stack trace</a>。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/warn\"><code>Console.warn()</code></a></p>\n<p>打印一个警告信息，可以使用 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console#using_string_substitutions\">string substitution</a> 和额外的参数。</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/!--swig%EF%BF%BC1--\"></p>\n<img src=\"../images/console/7d9a0b3a233368afc38ae348851a6ba6.jpg\" style=\"zoom:50%;\" />\n\n<p><strong><code>Console</code></strong> 对象提供了浏览器控制台调试的接口（如：Firefox 的 <a href=\"https://developer.mozilla.org/en-US/docs/Tools/Web_Console\">Web Console</a>）。在不同浏览器上它的工作方式可能不一样，但通常都会提供一套共性的功能。</p>\n<p><code>Console</code> 对象可以从任何全局对象中访问到，如 浏览器作用域上的 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Window\"><code>Window</code></a>，以及通过属性控制台作为workers中的特定变体的 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a>。可以通过 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/console\"><code>Window.console</code></a> 引用，也可以简单的通过 <code>console</code> 引用。例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(&quot;Failed to open the specified link&quot;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h3><ul>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/assert\"><code>Console.assert()</code></a></p>\n<p>如果第一个参数为 <code>false</code> ，则将消息和堆栈跟踪记录到控制台。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/clear\"><code>Console.clear()</code></a></p>\n<p>清空控制台，并输出 <code>Console was cleared</code>。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/count\"><code>Console.count()</code></a></p>\n<p>以参数为标识记录调用的次数，调用时在控制台打印标识以及调用次数。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/countReset\"><code>Console.countReset()</code></a></p>\n<p>重置指定标签的计数器值。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/debug\"><code>Console.debug()</code></a></p>\n<p>在控制台打印一条 <code>&quot;debug&quot;</code> 级别的消息。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/dir\"><code>Console.dir()</code></a></p>\n<p>显示一个由特定的 Javascript 对象列表组成的可交互列表。这个列表可以使用三角形隐藏和显示来审查子对象的内容。.</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/dirxml\"><code>Console.dirxml()</code></a></p>\n<p>打印 XML/HTML 元素表示的指定对象，否则显示 JavaScript 对象视图。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/error\"><code>Console.error()</code></a></p>\n<p>打印一条错误信息，使用方法可以参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console#using_string_substitutions\">string substitution</a>。</p>\n</li>\n<li><p><code>Console.exception()</code> Non-Standard Deprecated</p>\n<p><code>error()</code> 方法的别称。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/group\"><code>Console.group()</code></a></p>\n<p>创建一个新的内联 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console#using_groups_in_the_console\">group</a>, 后续所有打印内容将会以子层级的形式展示。调用 <code>groupEnd()</code>来闭合组。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/groupCollapsed\"><code>Console.groupCollapsed()</code></a></p>\n<p>创建一个新的内联 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console#using_groups_in_the_console\">group</a>。使用方法和 <code>group()</code> 相同，不同的是，<code>groupCollapsed()</code> 方法打印出来的内容默认是折叠的。调用<code>groupEnd()</code>来闭合组。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/groupEnd\"><code>Console.groupEnd()</code></a></p>\n<p>闭合当前内联 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console#Using_groups_in_the_console\">group</a>。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/info\"><code>Console.info()</code></a></p>\n<p>打印资讯类说明信息，使用方法可以参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console#using_string_substitutions\">string substitution</a>。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/log\"><code>Console.log()</code></a></p>\n<p>打印内容的通用方法，使用方法可以参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console#using_string_substitutions\">string substitution</a>。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/profile\"><code>Console.profile()</code></a> Non-Standard</p>\n<p>Starts the browser’s built-in profiler (for example, the <a href=\"https://firefox-source-docs.mozilla.org/devtools-user/performance/index.html\">Firefox performance tool</a>). You can specify an optional name for the profile.</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/profileEnd\"><code>Console.profileEnd()</code></a> Non-Standard</p>\n<p>Stops the profiler. You can see the resulting profile in the browser’s performance tool (for example, the <a href=\"https://firefox-source-docs.mozilla.org/devtools-user/performance/index.html\">Firefox performance tool</a>).</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/table\"><code>Console.table()</code></a></p>\n<p>将列表型的数据打印成表格。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/time\"><code>Console.time()</code></a></p>\n<p>启动一个以入参作为特定名称的<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console#Timers\">计时器</a>，在显示页面中可同时运行的计时器上限为10,000.</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/timeEnd\"><code>Console.timeEnd()</code></a></p>\n<p>结束特定的 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console#Timers\">计时器</a> 并以毫秒打印其从开始到结束所用的时间。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/timeLog\"><code>Console.timeLog()</code></a></p>\n<p>打印特定 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console#timers\">计时器</a> 所运行的时间。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/timeStamp\"><code>Console.timeStamp()</code></a> Non-Standard</p>\n<p>添加一个标记到浏览器的 <a href=\"https://developer.chrome.com/devtools/docs/timeline\">Timeline</a> 或 <a href=\"https://developer.mozilla.org/en-US/docs/Tools/Performance/Waterfall\">Waterfall</a> 工具。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/trace\"><code>Console.trace()</code></a></p>\n<p>输出一个 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console#stack_traces\">stack trace</a>。</p>\n</li>\n<li><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console/warn\"><code>Console.warn()</code></a></p>\n<p>打印一个警告信息，可以使用 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console#using_string_substitutions\">string substitution</a> 和额外的参数。</p>\n</li>\n</ul>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2022-03-02T15:52:26.208Z","updated":"2022-03-02T15:52:26.210Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl24t3qcf0002wsnr2qte8coj","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"react笔记","date":"2022-04-01T02:38:55.000Z","cover":null,"_content":"\n# 一、state\n\n","source":"_posts/react.md","raw":"---\ntitle: react笔记\ndate: 2022-04-01 10:38:55\ntags: react\ncover:\n---\n\n# 一、state\n\n","slug":"react","published":1,"updated":"2022-04-18T14:12:45.424Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl24t3qch0003wsnrc4v9gmjv","content":"<h1 id=\"一、state\"><a href=\"#一、state\" class=\"headerlink\" title=\"一、state\"></a>一、state</h1>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一、state\"><a href=\"#一、state\" class=\"headerlink\" title=\"一、state\"></a>一、state</h1>"},{"title":"发布流程","date":"2022-03-03T02:38:55.000Z","cover":"https://7465-test-9g28n0kc3da62e81-1305695530.tcb.qcloud.la/my-image.png?sign=d523cf7697d21b49d89b4321cb6698be&t=1646278119","_content":"\n\n## 前提条件\n\n[github](https://github.com/)账号，并创建一个仓库\n配置[nodejs](https://nodejs.org/en/) \n配置[git](http://git-scm.com/) \n\n## 一 初始\n\n创建一个文件夹，拉取仓库。\ngit clone <你的仓库地址>\n初始化 \n\n```\nnpm init\n```\n\n \n下载 [Hexo](https://hexo.io/zh-cn/docs/) 具体可以看官方文档\n\n## 二 安装\n\n安装Hexo 成功后 \n\n```\ngit clone https://github.com/miiiku/hexo-theme-flexblock.git ./themes/flex-block\n```\n\n编辑`_config.yml`文件找到**theme**并设置值为`flex-block`\n\n## 三 [部署](https://hexo.io/zh-cn/docs/one-command-deployment)\n\n1. 安装 [hexo-deployer-git](https://github.com/hexojs/hexo-deployer-git)。\n\n```\n$ npm install hexo-deployer-git --save\n```\n\n2 .修改_config.yml 文件中的deploy \n\n```\ndeploy:\n  type: git\n  repo: <repository url> #https://github.com/totop01/totop01.github.io\n  branch: [branch] #分支 建议新建一个分支把要发布的文件放到改分支上\n  message: [message] #提交信息\n```\n\n3 执行命令\n\n```\nhexo clean && hexo deploy\n```\n\n## 四 设置\n\n进入github 仓库设置 找到pages 选择你要发布的分支保存，过一会通过username.github.io 访问你的页面 ","source":"_posts/发布流程.md","raw":"---\ntitle: 发布流程\ndate: 2022-03-03 10:38:55\ntags:\ncover: https://7465-test-9g28n0kc3da62e81-1305695530.tcb.qcloud.la/my-image.png?sign=d523cf7697d21b49d89b4321cb6698be&t=1646278119\n---\n\n\n## 前提条件\n\n[github](https://github.com/)账号，并创建一个仓库\n配置[nodejs](https://nodejs.org/en/) \n配置[git](http://git-scm.com/) \n\n## 一 初始\n\n创建一个文件夹，拉取仓库。\ngit clone <你的仓库地址>\n初始化 \n\n```\nnpm init\n```\n\n \n下载 [Hexo](https://hexo.io/zh-cn/docs/) 具体可以看官方文档\n\n## 二 安装\n\n安装Hexo 成功后 \n\n```\ngit clone https://github.com/miiiku/hexo-theme-flexblock.git ./themes/flex-block\n```\n\n编辑`_config.yml`文件找到**theme**并设置值为`flex-block`\n\n## 三 [部署](https://hexo.io/zh-cn/docs/one-command-deployment)\n\n1. 安装 [hexo-deployer-git](https://github.com/hexojs/hexo-deployer-git)。\n\n```\n$ npm install hexo-deployer-git --save\n```\n\n2 .修改_config.yml 文件中的deploy \n\n```\ndeploy:\n  type: git\n  repo: <repository url> #https://github.com/totop01/totop01.github.io\n  branch: [branch] #分支 建议新建一个分支把要发布的文件放到改分支上\n  message: [message] #提交信息\n```\n\n3 执行命令\n\n```\nhexo clean && hexo deploy\n```\n\n## 四 设置\n\n进入github 仓库设置 找到pages 选择你要发布的分支保存，过一会通过username.github.io 访问你的页面 ","slug":"发布流程","published":1,"updated":"2022-03-28T08:39:11.562Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl24t3qci0004wsnr10ttee52","content":"<h2 id=\"前提条件\"><a href=\"#前提条件\" class=\"headerlink\" title=\"前提条件\"></a>前提条件</h2><p><a href=\"https://github.com/\">github</a>账号，并创建一个仓库<br>配置<a href=\"https://nodejs.org/en/\">nodejs</a><br>配置<a href=\"http://git-scm.com/\">git</a> </p>\n<h2 id=\"一-初始\"><a href=\"#一-初始\" class=\"headerlink\" title=\"一 初始\"></a>一 初始</h2><p>创建一个文件夹，拉取仓库。<br>git clone &lt;你的仓库地址&gt;<br>初始化 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init</span><br></pre></td></tr></table></figure>\n\n<p>下载 <a href=\"https://hexo.io/zh-cn/docs/\">Hexo</a> 具体可以看官方文档</p>\n<h2 id=\"二-安装\"><a href=\"#二-安装\" class=\"headerlink\" title=\"二 安装\"></a>二 安装</h2><p>安装Hexo 成功后 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/miiiku/hexo-theme-flexblock.git ./themes/flex-block</span><br></pre></td></tr></table></figure>\n\n<p>编辑<code>_config.yml</code>文件找到<strong>theme</strong>并设置值为<code>flex-block</code></p>\n<h2 id=\"三-部署\"><a href=\"#三-部署\" class=\"headerlink\" title=\"三 部署\"></a>三 <a href=\"https://hexo.io/zh-cn/docs/one-command-deployment\">部署</a></h2><ol>\n<li>安装 <a href=\"https://github.com/hexojs/hexo-deployer-git\">hexo-deployer-git</a>。</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p>2 .修改_config.yml 文件中的deploy </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: &lt;repository url&gt; #https://github.com/totop01/totop01.github.io</span><br><span class=\"line\">  branch: [branch] #分支 建议新建一个分支把要发布的文件放到改分支上</span><br><span class=\"line\">  message: [message] #提交信息</span><br></pre></td></tr></table></figure>\n\n<p>3 执行命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"四-设置\"><a href=\"#四-设置\" class=\"headerlink\" title=\"四 设置\"></a>四 设置</h2><p>进入github 仓库设置 找到pages 选择你要发布的分支保存，过一会通过username.github.io 访问你的页面 </p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前提条件\"><a href=\"#前提条件\" class=\"headerlink\" title=\"前提条件\"></a>前提条件</h2><p><a href=\"https://github.com/\">github</a>账号，并创建一个仓库<br>配置<a href=\"https://nodejs.org/en/\">nodejs</a><br>配置<a href=\"http://git-scm.com/\">git</a> </p>\n<h2 id=\"一-初始\"><a href=\"#一-初始\" class=\"headerlink\" title=\"一 初始\"></a>一 初始</h2><p>创建一个文件夹，拉取仓库。<br>git clone &lt;你的仓库地址&gt;<br>初始化 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init</span><br></pre></td></tr></table></figure>\n\n<p>下载 <a href=\"https://hexo.io/zh-cn/docs/\">Hexo</a> 具体可以看官方文档</p>\n<h2 id=\"二-安装\"><a href=\"#二-安装\" class=\"headerlink\" title=\"二 安装\"></a>二 安装</h2><p>安装Hexo 成功后 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/miiiku/hexo-theme-flexblock.git ./themes/flex-block</span><br></pre></td></tr></table></figure>\n\n<p>编辑<code>_config.yml</code>文件找到<strong>theme</strong>并设置值为<code>flex-block</code></p>\n<h2 id=\"三-部署\"><a href=\"#三-部署\" class=\"headerlink\" title=\"三 部署\"></a>三 <a href=\"https://hexo.io/zh-cn/docs/one-command-deployment\">部署</a></h2><ol>\n<li>安装 <a href=\"https://github.com/hexojs/hexo-deployer-git\">hexo-deployer-git</a>。</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p>2 .修改_config.yml 文件中的deploy </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: &lt;repository url&gt; #https://github.com/totop01/totop01.github.io</span><br><span class=\"line\">  branch: [branch] #分支 建议新建一个分支把要发布的文件放到改分支上</span><br><span class=\"line\">  message: [message] #提交信息</span><br></pre></td></tr></table></figure>\n\n<p>3 执行命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"四-设置\"><a href=\"#四-设置\" class=\"headerlink\" title=\"四 设置\"></a>四 设置</h2><p>进入github 仓库设置 找到pages 选择你要发布的分支保存，过一会通过username.github.io 访问你的页面 </p>\n"},{"title":"计算机网络","date":"2022-03-28T08:15:34.000Z","_content":"\n### 概述\n\n三大网络：**电信网络**、**有线电视网络**和**计算机网络**\n\n电话网络提供电话、电报及传真等服务\n\n有线电视网络向用户传送各种电视节目\n\n计算机网络使用户能够在计算计之间传送数据文件\n\n互联网的两个基本特点：**连通性**和**共享**\n\n### 计算机网络\n\n计算机网络由若干**节点**和**链路**组成，网络中的节点可是计算机、集线器、交换机和路由器\n\ninternet(互连网) 通用名词，它泛指由多个计算机网络互连而成的计算机网络\n\nInternet(互联网) 专用名词，指当前全球最大的、开放的、由众多网络互相连接而成的特定互连网，它采取TCP/IP协议作为通信的规则、且前身是美国的arpanet\n\n制定互联网的正式标准的三个阶段: 互联网草案 -> 建议标准 -> 互连网标准\n\n","source":"_posts/计算机网络.md","raw":"---\ntitle: 计算机网络\ndate: 2022-03-28 16:15:34\ntags: 对大学计算网络重新进行了学习，本文也相当于是笔记\n---\n\n### 概述\n\n三大网络：**电信网络**、**有线电视网络**和**计算机网络**\n\n电话网络提供电话、电报及传真等服务\n\n有线电视网络向用户传送各种电视节目\n\n计算机网络使用户能够在计算计之间传送数据文件\n\n互联网的两个基本特点：**连通性**和**共享**\n\n### 计算机网络\n\n计算机网络由若干**节点**和**链路**组成，网络中的节点可是计算机、集线器、交换机和路由器\n\ninternet(互连网) 通用名词，它泛指由多个计算机网络互连而成的计算机网络\n\nInternet(互联网) 专用名词，指当前全球最大的、开放的、由众多网络互相连接而成的特定互连网，它采取TCP/IP协议作为通信的规则、且前身是美国的arpanet\n\n制定互联网的正式标准的三个阶段: 互联网草案 -> 建议标准 -> 互连网标准\n\n","slug":"计算机网络","published":1,"updated":"2022-04-18T14:08:48.643Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl24t3qcl0006wsnr13zo5lqz","content":"<h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><p>三大网络：<strong>电信网络</strong>、<strong>有线电视网络</strong>和<strong>计算机网络</strong></p>\n<p>电话网络提供电话、电报及传真等服务</p>\n<p>有线电视网络向用户传送各种电视节目</p>\n<p>计算机网络使用户能够在计算计之间传送数据文件</p>\n<p>互联网的两个基本特点：<strong>连通性</strong>和<strong>共享</strong></p>\n<h3 id=\"计算机网络\"><a href=\"#计算机网络\" class=\"headerlink\" title=\"计算机网络\"></a>计算机网络</h3><p>计算机网络由若干<strong>节点</strong>和<strong>链路</strong>组成，网络中的节点可是计算机、集线器、交换机和路由器</p>\n<p>internet(互连网) 通用名词，它泛指由多个计算机网络互连而成的计算机网络</p>\n<p>Internet(互联网) 专用名词，指当前全球最大的、开放的、由众多网络互相连接而成的特定互连网，它采取TCP/IP协议作为通信的规则、且前身是美国的arpanet</p>\n<p>制定互联网的正式标准的三个阶段: 互联网草案 -&gt; 建议标准 -&gt; 互连网标准</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><p>三大网络：<strong>电信网络</strong>、<strong>有线电视网络</strong>和<strong>计算机网络</strong></p>\n<p>电话网络提供电话、电报及传真等服务</p>\n<p>有线电视网络向用户传送各种电视节目</p>\n<p>计算机网络使用户能够在计算计之间传送数据文件</p>\n<p>互联网的两个基本特点：<strong>连通性</strong>和<strong>共享</strong></p>\n<h3 id=\"计算机网络\"><a href=\"#计算机网络\" class=\"headerlink\" title=\"计算机网络\"></a>计算机网络</h3><p>计算机网络由若干<strong>节点</strong>和<strong>链路</strong>组成，网络中的节点可是计算机、集线器、交换机和路由器</p>\n<p>internet(互连网) 通用名词，它泛指由多个计算机网络互连而成的计算机网络</p>\n<p>Internet(互联网) 专用名词，指当前全球最大的、开放的、由众多网络互相连接而成的特定互连网，它采取TCP/IP协议作为通信的规则、且前身是美国的arpanet</p>\n<p>制定互联网的正式标准的三个阶段: 互联网草案 -&gt; 建议标准 -&gt; 互连网标准</p>\n"},{"title":"随笔","date":"2022-04-01T02:38:55.000Z","cover":null,"_content":"\n### 协商缓存\n\n强缓存：浏览器不与服务端协商直接取浏览器缓存\n\n协商缓存：浏览器会先向服务器确认资源的有效性后才决定是从缓存中取资源还是重新获取资源\n\n**实现**：在nginx的请求头配置里加上 \n\n```\nlocation /picture/ { \n    add_header Cache-Control no-cache;\n}\n```\n\n然后重启nginx：`nginx -s reload`使配置生效\n\n再次发起请求后，请求头会带上If-Modified-Since和If-None-Match \n\n服务端（nginx）收到这两项后，会与资源当前生成的Etag和Last-Modified做比较，如果两者都一致，说明资源没有更新，服务端会返回304空响应；否则，说明资源有更新，服务端会将完整的资源内容返回\n\n**no-cache与no-store的区别**\n\nno-cache表示不缓存过期资源，缓存会向服务器进行有效处理确认之后处理资源\n\n而no-store才是真正的不进行缓存","source":"_posts/随笔.md","raw":"---\ntitle: 随笔\ndate: 2022-04-01 10:38:55\ntags:\ncover:\n---\n\n### 协商缓存\n\n强缓存：浏览器不与服务端协商直接取浏览器缓存\n\n协商缓存：浏览器会先向服务器确认资源的有效性后才决定是从缓存中取资源还是重新获取资源\n\n**实现**：在nginx的请求头配置里加上 \n\n```\nlocation /picture/ { \n    add_header Cache-Control no-cache;\n}\n```\n\n然后重启nginx：`nginx -s reload`使配置生效\n\n再次发起请求后，请求头会带上If-Modified-Since和If-None-Match \n\n服务端（nginx）收到这两项后，会与资源当前生成的Etag和Last-Modified做比较，如果两者都一致，说明资源没有更新，服务端会返回304空响应；否则，说明资源有更新，服务端会将完整的资源内容返回\n\n**no-cache与no-store的区别**\n\nno-cache表示不缓存过期资源，缓存会向服务器进行有效处理确认之后处理资源\n\n而no-store才是真正的不进行缓存","slug":"随笔","published":1,"updated":"2022-04-18T14:03:16.188Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl24t3qcm0007wsnr6c635wuc","content":"<h3 id=\"协商缓存\"><a href=\"#协商缓存\" class=\"headerlink\" title=\"协商缓存\"></a>协商缓存</h3><p>强缓存：浏览器不与服务端协商直接取浏览器缓存</p>\n<p>协商缓存：浏览器会先向服务器确认资源的有效性后才决定是从缓存中取资源还是重新获取资源</p>\n<p><strong>实现</strong>：在nginx的请求头配置里加上 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /picture/ &#123; </span><br><span class=\"line\">    add_header Cache-Control no-cache;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然后重启nginx：<code>nginx -s reload</code>使配置生效</p>\n<p>再次发起请求后，请求头会带上If-Modified-Since和If-None-Match </p>\n<p>服务端（nginx）收到这两项后，会与资源当前生成的Etag和Last-Modified做比较，如果两者都一致，说明资源没有更新，服务端会返回304空响应；否则，说明资源有更新，服务端会将完整的资源内容返回</p>\n<p><strong>no-cache与no-store的区别</strong></p>\n<p>no-cache表示不缓存过期资源，缓存会向服务器进行有效处理确认之后处理资源</p>\n<p>而no-store才是真正的不进行缓存</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"协商缓存\"><a href=\"#协商缓存\" class=\"headerlink\" title=\"协商缓存\"></a>协商缓存</h3><p>强缓存：浏览器不与服务端协商直接取浏览器缓存</p>\n<p>协商缓存：浏览器会先向服务器确认资源的有效性后才决定是从缓存中取资源还是重新获取资源</p>\n<p><strong>实现</strong>：在nginx的请求头配置里加上 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /picture/ &#123; </span><br><span class=\"line\">    add_header Cache-Control no-cache;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然后重启nginx：<code>nginx -s reload</code>使配置生效</p>\n<p>再次发起请求后，请求头会带上If-Modified-Since和If-None-Match </p>\n<p>服务端（nginx）收到这两项后，会与资源当前生成的Etag和Last-Modified做比较，如果两者都一致，说明资源没有更新，服务端会返回304空响应；否则，说明资源有更新，服务端会将完整的资源内容返回</p>\n<p><strong>no-cache与no-store的区别</strong></p>\n<p>no-cache表示不缓存过期资源，缓存会向服务器进行有效处理确认之后处理资源</p>\n<p>而no-store才是真正的不进行缓存</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cl24t3qch0003wsnrc4v9gmjv","tag_id":"cl24t3qcj0005wsnr1rae7h9f","_id":"cl24t3qco0009wsnr9pbp6ojv"},{"post_id":"cl24t3qcl0006wsnr13zo5lqz","tag_id":"cl24t3qcn0008wsnrcmis2o41","_id":"cl24t3qco000awsnr6wcjan5n"}],"Tag":[{"name":"react","_id":"cl24t3qcj0005wsnr1rae7h9f"},{"name":"对大学计算网络重新进行了学习，本文也相当于是笔记","_id":"cl24t3qcn0008wsnrcmis2o41"}]}}